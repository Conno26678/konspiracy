<!DOCTYPE html>
<html lang="en">
    
<head>
    <meta charset="UTF-8">
    <title>Teacher Panel</title>
</head>

<body>
    <h1>Welcome Teacher</h1>
    <form id="quiz-form" method="POST" action="/teacher">
        <label for="subject">Choose a quiz:</label>
        <select id="subject" name="selectedQuiz"></select>
        <button type="button" id="view-quiz">View Quiz</button>
        <div id="time"></div>
        <button style="display:none;" type="button" onclick="countdown()" id="ready-button">Ready</button>
    </form>
    
    <div id="quiz-container" style="display: none;">
        <h2 id="quiz-title"></h2>
        <div id="questions"></div>
    </div>
    
    <button id="ready">Start</button>
    <div>
        <h3>Active Students in Your Classes:</h3>
        <ul id="students">
            <% students.forEach(student=> { %>
                <li>
                    <%= student %>
                </li>
                <% }) %>
            </ul>
        </div>
        
        <!-- Add this to teacher.ejs -->
        <div id="game-status-panel" style="border: 1px solid #ccc; padding: 15px; margin: 10px;">
            <h3>Game Status</h3>
            <p id="game-status">No Active Game</p>
            <p>Question: <span id="current-question">-</span></p>
            <p>Answers Received: <span id="answers-count">0</span>/<span id="total-students">0</span></p>
        </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        // Injected from server
        const quizzes = <%- JSON.stringify(quizzes) %>;

        const subjectDropdown = document.getElementById('subject');
        const quizContainer = document.getElementById('quiz-container');
        const quizTitle = document.getElementById('quiz-title');
        const questionsDiv = document.getElementById('questions');
        const viewQuizButton = document.getElementById('view-quiz');

        // Populate dropdown
        Object.keys(quizzes).forEach(name => {
            const opt = document.createElement('option');
            opt.value = name;
            opt.textContent = quizzes[name].title || name;
            subjectDropdown.appendChild(opt);
        });

        viewQuizButton.addEventListener('click', () => {
            const selected = subjectDropdown.value;
            questionsDiv.innerHTML = '';
            const quiz = quizzes[selected];
            if (!quiz) return;

            quizTitle.textContent = quiz.title;
            quiz.questions.forEach((qText, idx) => {
                const p = document.createElement('p');
                p.textContent = (idx + 1) + '. ' + qText;
                questionsDiv.appendChild(p);

                const ansObj = quiz.answers[idx];
                Object.entries(ansObj).forEach(([answerText, isCorrect]) => {
                    const div = document.createElement('div');
                    div.innerHTML = `
                        <label>
                            <input type="radio" name="q${idx}" value="${answerText}" disabled>
                            ${answerText}
                        </label>
                    `;
                    questionsDiv.appendChild(div);
                });
            });
            quizContainer.style.display = 'block';
            document.getElementById('ready-button').style.display = 'inline-block';
        });

        function countdown() {
            let t = 5;
            const timeDiv = document.getElementById('time');
            const intId = setInterval(() => {
                timeDiv.textContent = t;
                t--;
                if (t < 0) {
                    clearInterval(intId);
                    document.getElementById('quiz-form').submit();
                }
            }, 1000);
        }

                quizContainer.style.display = "block";
                
                // Update the ready button text to be more clear
                document.getElementById('ready').textContent = `Start ${quiz.title}`;
            }
        });

        const socket = io();
        let timer = null;

        // Button click - send to server
        document.getElementById('ready').onclick = () => {
            // Get selected quiz from dropdown
            const selectedSubject = document.getElementById('subject').value;
            const selectedQuiz = quizzes[selectedSubject];
            
            if (selectedQuiz) {
                console.log('Starting game with quiz:', selectedQuiz);
                // First start the game with quiz data
                socket.emit('start-game', selectedQuiz);
                
                // Then start the countdown
                setTimeout(() => {
                    socket.emit('start-countdown');
                }, 1000); // Small delay to ensure game is created first
            } else {
                alert('Please select a quiz first!');
            }
        };

        // Start countdown when server says so
        socket.on('countdown-start', (data) => {
            let remaining = Math.ceil((data.endTime - Date.now()) / 1000);

            timer = setInterval(() => {
                document.getElementById('time').innerText = remaining;
                remaining--;
                if (remaining < 0) {
                    clearInterval(timer);
                }
            }, 1000);
        });

        // Sync countdown if joining late
        socket.on('countdown:sync', (data) => {
            let remaining = data.remaining;

            timer = setInterval(() => {
                document.getElementById('time').innerText = remaining;
                remaining--;
                if (remaining < 0) {
                    clearInterval(timer);
                }
            }, 1000);
        });

        // Clear when done
        socket.on('countdown-done', () => {
            document.getElementById('time').innerText = '';
            if (timer) clearInterval(timer);
            alert('Question?')
        });

        // Update student list
        socket.on('update-students', (students) => {
            const studentList = document.getElementById('students');
            studentList.innerHTML = '';

            students.forEach(student => {
                const li = document.createElement('li');
                li.textContent = student;
                studentList.appendChild(li);
            });
        });

        // Handle game state updates
        socket.on('game-state', (gameData) => {
            console.log('Game state received:', gameData);
            
            // Update game status panel
            const gameStatus = document.getElementById('game-status');
            const currentQuestion = document.getElementById('current-question');
            const answersCount = document.getElementById('answers-count');
            const totalStudents = document.getElementById('total-students');
            
            // Update UI based on game state
            switch(gameData.state) {
                case 'lobby':
                    gameStatus.textContent = `Game "${gameData.quiz.title}" Ready - Click Start`;
                    currentQuestion.textContent = 'Waiting to start';
                    break;
                case 'countdown':
                    gameStatus.textContent = 'Countdown Active';
                    currentQuestion.textContent = `Question ${gameData.currentQuestionIndex + 1}`;
                    break;
                case 'gettingAnswers':
                    gameStatus.textContent = 'Students Answering';
                    currentQuestion.textContent = gameData.currentQuestion || 'Loading...';
                    break;
                case 'review':
                    gameStatus.textContent = 'Review Answers';
                    break;
                case 'gameOver':
                    gameStatus.textContent = 'Game Ended';
                    break;
            }
            
            answersCount.textContent = gameData.answersReceived;
            totalStudents.textContent = gameData.studentsConnected;
        });

        // Handle errors
        socket.on('error', (data) => {
            console.error('Socket error:', data.message);
            alert('Error: ' + data.message);
            document.getElementById('game-status').textContent = 'Error: ' + data.message;
        });

        // Handle when all answers are received
        socket.on('answers-received', () => {
            alert('All students have answered! You can now review answers or go to the next question.');
            
            // Show next question button
            const nextBtn = document.createElement('button');
            nextBtn.textContent = 'Next Question';
            nextBtn.onclick = () => {
                socket.emit('next-question');
                nextBtn.remove(); // Remove button after clicking
            };
            document.getElementById('game-status-panel').appendChild(nextBtn);
        });
    </script>

</body>

<script>
    function countdown() {
        let time = 10;
        const interval = setInterval(() => {
            document.getElementById('time').innerText = time;
            time--;
            if (time <= 0) {
                clearInterval(interval);
                document.getElementById('quiz-form').submit(); // Submit the form to /teacher
            }
        }, 1000);
    }
</script>

</html>